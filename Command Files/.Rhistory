geom_smooth(method = lm)
cor(activity$TotalDistance, activity$Calories)
colnames(activity)
activity %>%
ggplot(aes(x = SedentaryMinutes, y = Calories)) +
geom_point() +
geom_smooth(method = lm)
cor(activity$SedentaryMinutes, activity$Calories)
activity %>%
ggplot(aes(x = FairlyActiveMinutes, y = Calories)) +
geom_point() +
geom_smooth(method = lm)
cor(activity$FairlyActiveMinutes, activity$Calories)
activity %>%
ggplot(aes(x = FairlyActiveMinutes, y = Calories)) +
geom_point() +
geom_smooth(method = lm)
colnames(activity)
cor(activity$FairlyActiveMinutes, activity$Calories)
ggplot(data = weight, aes(x=WeightKg, y=BMI)) +
geom_point(alpha = 1/5, size = 2) +
geom_smooth(method = lm)
ggplot(data = weight, aes(x = WeightKg, y = BMI)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4)
activity %>%
ggplot(aes(x = TotalSteps, y = Calories)) +
geom_point() +
geom_smooth(method = lm)
colnames(activity)
activity %>%
ggplot(aes(x = SedentaryMinutes, y = TotalSteps)) +
geom_point() +
geom_smooth(method = lm)
cor(activity$SedentaryMinutes, activity$TotalSteps)
activity %>%
ggplot(aes(x = SedentaryMinutes, y = Calories)) +
geom_point() +
geom_smooth(method = lm)
activity %>%
ggplot(aes(x = VeryActiveMinutes, y = Calories)) +
geom_point() +
geom_smooth(method = lm)
avg(activity$VeryActiveMinutes)
mean(activity$VeryActiveMinutes)
mean(activity$SedentaryMinutes)
activity %>%
ggplot(aes(x = VeryActiveMinutes, y = TotalSteps)) +
geom_point() +
geom_smooth(method = lm)
activity %>%
ggplot(aes(x = VeryActiveMinutes, y = TotalSteps)) +
geom_point() +
geom_smooth(method = lm)
cor(activity$VeryActiveMinutes, activity$TotalSteps)
mean(activity$VeryActiveMinutes)
mean(activity$SedentaryMinutes)
colnames(activity) # 15 columns
activity %>%
select(TotalSteps, TotalDistance, VeryActiveMinutes,
SedentaryMinutes, Calories) %>%
summary()
ggplot(data = weight, aes(x=WeightKg, y=BMI)) +
geom_point(alpha = 1/5, size = 2) +
geom_smooth(method = lm)
ggplot(data = weight, aes(x = WeightKg, y = BMI)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4)
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm)
activity = read.csv("../Data/Importable Data/dailyActivity_merged.csv")
sleepActivity = read.csv("../Data/Importable Data/sleepActivity.csv")
weightActivity = read.csv("../Data/Importable Data/weightActivity.csv")
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm)
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm)
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories, title='Weight v/s Calories')) +
geom_point() +
geom_smooth(method = lm)
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Weight v/s Calories')
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 40))
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 30))
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20))
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = 'bold'))
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold'))
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Weight (Kgs)') +
ylab('Calories')
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point(color = 'black') +
geom_smooth(method = lm) +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Weight (Kgs)') +
ylab('Calories')
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point(color = 'blue') +
geom_smooth(method = lm, color = 'black') +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Weight (Kgs)') +
ylab('Calories')
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point(color = 'blue') +
geom_smooth(method = lm, color = 'black') +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Weight (Kgs)') +
ylab('Calories') +
ylim(3500)
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point(color = 'blue') +
geom_smooth(method = lm, color = 'black') +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Weight (Kgs)') +
ylab('Calories') +
ylim(1000, 3500)
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point(color = 'blue') +
geom_smooth(method = lm, color = 'black') +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Weight (Kgs)') +
ylab('Calories') +
ylim(1500, 3500)
ggplot(aes(x = minutesAsleep, y = calories)) +
geom_point() +
geom_smooth(method = lm)
library(ggplot2)
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point(color = 'blue') +
geom_smooth(method = lm, color = 'black') +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Weight (Kgs)') +
ylab('Calories') +
ylim(1500, 3500)
ggplot(aes(x = minutesAsleep, y = calories)) +
geom_point() +
geom_smooth(method = lm)
View(weightActivity)
View(sleepActivity)
ggplot(data = sleepActivity, aes(x = minutesAsleep, y = calories)) +
geom_point() +
geom_smooth(method = lm)
ggplot(data = sleepActivity, aes(x = minutesAsleep, y = calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Minutes Asleep v/s Calories')
ggplot(data = sleepActivity, aes(x = minutesAsleep, y = calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Minutes Asleep v/s Calories') +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = sleepActivity, aes(x = minutesAsleep, y = calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Minutes Asleep v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold'))
ggplot(data = sleepActivity, aes(x = minutesAsleep, y = calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Minutes Asleep v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Minutes Asleep') +
ylab('Calories')
activity %>%
ggplot(aes(x = TotalSteps, y = Calories)) +
geom_point() +
geom_smooth(method = lm)
activity %>%
ggplot(aes(x = SedentaryMinutes, y = Calories)) +
geom_point() +
geom_smooth(method = lm)
activity %>%
ggplot(aes(x = FairlyActiveMinutes, y = Calories)) +
geom_point() +
geom_smooth(method = lm)
View(activity)
activity %>%
ggplot(aes(x = VeryActiveMinutes, y = TotalSteps)) +
geom_point() +
geom_smooth(method = lm)
ggplot(data = activity, aes(x = TotalSteps, y = Calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Total Steps v/s Calories')
ggplot(data = activity, aes(x = TotalSteps, y = Calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Total Steps v/s Calories') +
theme(plot.title = element_text(hjust = 0.5,
size = 20,
face = 'bold'))
ggplot(data = sleepActivity, aes(x = minutesAsleep, y = calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Minutes Asleep v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Minutes Asleep') +
ylab('Calories')
activity = read.csv("../Data/Importable Data/dailyActivity_merged.csv")
# Author: Sneha Verma
# Date of Creation: 16 August 2022
# Purpose of Script: Communicate the results of the analysis and
# relate it to the business problem
# The goal of this project is to analyze consumer's use of a competitor
# for growth opportunities and recommendations for the marketing team.
# Import datasets
activity = read.csv("../Data/Importable Data/dailyActivity_merged.csv")
sleepActivity = read.csv("../Data/Importable Data/sleepActivity.csv")
weightActivity = read.csv("../Data/Importable Data/weightActivity.csv")
# The following visualizations describe the results from the analysis.
library(ggplot2)
# Weight and Calories
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point(color = 'blue') +
geom_smooth(method = lm, color = 'black') +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Weight (Kgs)') +
ylab('Calories') +
ylim(1500, 3500)
# This visualization shows that most participants lost approximately
# 2000 calories. However, there are outliers- participants between
# the weight of 85 and 95 kgs lost the most calories.
# Sleep and Calories
ggplot(data = sleepActivity, aes(x = minutesAsleep, y = calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Minutes Asleep v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Minutes Asleep') +
ylab('Calories')
ggplot(data = activity, aes(x = TotalSteps, y = Calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Total Steps v/s Calories') +
theme(plot.title = element_text(hjust = 0.5,
size = 20,
face = 'bold'))
minutes = matrix(c(
mean(activity$VeryActiveMinutes),
mean(activity$FairlyActiveMinutes),
mean(activity$LightlyActiveMinutes),
mean(activity$SedentaryMinutes)
),ncol=1,byrow=TRUE)
colnames(minutes) = c('Minutes Type')
rownames(minutes) = c(
'Very Active Minutes',
'Fairly Active Minutes',
'Lightly Active Minutes',
'Sedentary Minutes'
)
minutes
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point(color = 'blue') +
geom_smooth(method = lm, color = 'black') +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Weight (Kgs)') +
ylab('Calories') +
ylim(1500, 3500)
library(ggplot2)
ggplot(data = weightActivity, aes(x=WeightKg_name, y=calories)) +
geom_point(color = 'blue') +
geom_smooth(method = lm, color = 'black') +
ggtitle('Weight v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Weight (Kgs)') +
ylab('Calories') +
ylim(1500, 3500)
ggplot(data = sleepActivity, aes(x = minutesAsleep, y = calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Minutes Asleep v/s Calories') +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = 'bold')) +
xlab('Minutes Asleep') +
ylab('Calories')
ggplot(data = activity, aes(x = TotalSteps, y = Calories)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle('Total Steps v/s Calories') +
theme(plot.title = element_text(hjust = 0.5,
size = 20,
face = 'bold'))
activity %>%
select(TotalSteps, TotalDistance, VeryActiveMinutes,
SedentaryMinutes, Calories) %>%
summary()
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
activity %>%
select(TotalSteps, TotalDistance, VeryActiveMinutes,
SedentaryMinutes, Calories) %>%
summary()
library(dplyr)
activity %>%
select(TotalSteps, TotalDistance, VeryActiveMinutes,
SedentaryMinutes, Calories) %>%
summary()
ggplot(data = weight, aes(x=WeightKg, y=BMI)) +
geom_point(alpha = 1/5, size = 2) +
geom_smooth(method = lm)
library(ggplot2)
ggplot(data = weight, aes(x=WeightKg, y=BMI)) +
geom_point(alpha = 1/5, size = 2) +
geom_smooth(method = lm)
install.packages("tidyverse")
library(ggplot2)
ggplot(data = weight, aes(x=WeightKg, y=BMI)) +
geom_point(alpha = 1/5, size = 2) +
geom_smooth(method = lm)
activity = read.csv("../Data/Importable Data/dailyActivity_merged.csv")
sleepActivity = read.csv("../Data/Importable Data/sleepActivity.csv")
weightActivity = read.csv("../Data/Importable Data/weightActivity.csv")
weightActivity %>%
select(WeightKg_name, BMI_name, calories) %>%
summary()
ggplot(data = weight, aes(x=WeightKg, y=BMI)) +
geom_point(alpha = 1/5, size = 2) +
geom_smooth(method = lm)
ggplot(data = weightActivity, aes(x=WeightKg, y=BMI)) +
geom_point(alpha = 1/5, size = 2) +
geom_smooth(method = lm)
options(warn=-1)
### Import
# There are three datasets that will be used for this project:
weight = read.csv("../Data/Importable Data/weightLogInfo_merged_edit.csv")
sleep = read.csv("../Data/Importable Data/sleepDay_merged_edit.csv")
activity = read.csv("../Data/Importable Data/dailyActivity_merged.csv")
### Exploratory Analysis
## Column Names
colnames(weight)
colnames(sleep)
colnames(activity)
# all the dataframes have 'Id' as a common field which can be used to merge the data.
## Data Types
str(weight)
# Most variables are numeric (decimal or integers).
# There are logical and level variables (Date).
str(sleep)
# Most variables are integers. There are some level variables (e.g. Date).
str(activity)
# Most variables are numeric (decimal or integers).
## Column Size
length(sleep$Id) # 413 observations
length(activity$Id) # 940 observations
length(weight$Id) # 67 observations
# Each dataframe has a different length indicating that the number of people in each dataset is different.
## Unique Values
unique(sleep$Id) # 24 values
table(sleep$Id) # there are duplicated ids
# Some are duplicated much more than others.
unique(activity$Id) # 33 values
table(activity$Id) # All values are duplicated.
# Most Ids are duplicated 31 times.
unique(weight$Id) # 8 values
table(weight$Id) # Most values are duplicated.
# Two Ids are repeated the most times.
# This can cause the data to be unreliable as it is dependent on the values of just two participants.
### Data Wrangling
#install.packages("dplyr")
# Run the above code once if package is not already installed.
library(dplyr)
## Merge sleep and activity datasets
# create a new dataframe that has only one instance of each Id.
activity2 = activity %>%
group_by(Id) %>%
summarise_at(vars(Calories), list(name = mean))
# Change column name to describe the values properly.
colnames(activity2)[2] = "calories"
colnames(activity2)
# Create a new dataframe that has only one instance of each Id.
sleep2 = sleep %>%
group_by(Id) %>%
summarise_at(vars(TotalMinutesAsleep), list(name = mean))
# Change column name to describe the values properly.
colnames(sleep2)[2] = 'minutesAsleep'
colnames(sleep2)
# Verify Id duplicity
unique(activity2$Id)
table(activity2$Id)
unique(sleep2$Id)
table(sleep2$Id)
# Merge the new dataframes
sleepActivity = merge(activity2, sleep2, by="Id")
sleepActivity # 24 observations
# This data frame will be used to analyze the correlation between calories and minutes asleep.
## Merge activity and weight data frames.
# Create new data frame to have one instance of Id.
weight2 = weight %>%
group_by(Id) %>%
summarise_at(vars(WeightKg, BMI), list(name = mean))
# Merge activity and weight dataframes
weightActivity = merge(weight2, activity2, by='Id')
weightActivity # 8 observations
## All datasets required for analysis have been completed.
## Export dataframes
# sleepActivity
write.csv(sleepActivity, "../Data/Importable Data/sleepActivity.csv", row.names = FALSE)
# weightActivity
write.csv(weightActivity, "../Data/Importable Data/weightActivity.csv", row.names = FALSE)
install.packages("dplyr")
library(dplyr)
### Import data sets
activity = read.csv("../Data/Importable Data/dailyActivity_merged.csv")
sleepActivity = read.csv("../Data/Importable Data/sleepActivity.csv")
weightActivity = read.csv("../Data/Importable Data/weightActivity.csv")
### Exploratory Data Analysis
## explore activity
colnames(activity) # 15 columns
n_distinct(activity$Id) # 33 individual participants
nrow(activity) # 940 observations in total
## explore sleepActivity
colnames(sleepActivity) # 3 columns
n_distinct(sleepActivity$Id) # 24 individual participants
nrow(sleepActivity) # 24 observations
## explore weightActivity
colnames(weightActivity) # 4 columns
n_distinct(weightActivity$Id) # 8 individual participants
nrow(weightActivity) # 8 observations
# The activity data frame has the most participants
# compared to the other frames.
# Results from this analysis may not be reliable
# due to the small sample of each data frame.
## summary statistics for activity
activity %>%
select(TotalSteps, TotalDistance, VeryActiveMinutes,
SedentaryMinutes, Calories) %>%
summary()
# The results show that the average steps taken by all participants is 7638.
# The median and mean have a difference of approx. 200 steps.
# The average distance walked/exercised is ~ 5.2 miles.
# People were mainly sedentary compared to being activity (991 vs 21 mins).
# The mean and median of active and sedentary mins have a large difference
# implying that there are huge outliers in the values of these columns (as evidenced by the range).
# The average calories lost of all participants is 2304 with a wide range from 0 to 4900.
## summary statistics for weightActivity
weightActivity %>%
select(WeightKg_name, BMI_name, calories) %>%
summary()
# The average weight of all participants in the data frame is ~ 78 kgs with a BMI of 28.
# The average calories of this set of participants is slightly higher than the one from the activity data frame
# at 2342 calories.
## summary statistics of sleepActivity
sleepActivity %>%
select(minutesAsleep, calories) %>%
summary()
# The average minutes asleep is 378 minutes.
# The average calories of this set of participants is 2290, approx. the same as the activity data frrame.
# The minutes asleep describes how much, on average, each participant slept while their data was being recorded.
### Data Analysis
## Explore relationships
# Weight and BMI
install.packages("tidyverse")
